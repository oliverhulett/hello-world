buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE')
    }
}

apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

bootJar {
    baseName = 'application'
    version =  '0.1.0'
}

group = 'com.cap.backend'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

eclipse {
    classpath { defaultOutputDir = file('build') }
}

def immutablesVersion = '2.5.6'

dependencies {
    annotationProcessor("org.immutables:value:${immutablesVersion}")
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    compile('com.fasterxml.jackson.core:jackson-core')
    compile('com.fasterxml.jackson.core:jackson-databind')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-guava')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-joda')
    compile('javax.ws.rs:javax.ws.rs-api')
    compile('org.postgresql:postgresql')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    developmentOnly('org.springframework.boot:spring-boot-devtools')
    implementation("org.immutables:value:${immutablesVersion}")
    implementation('org.springframework.boot:spring-boot-starter-web')
    testCompile('io.rest-assured:rest-assured')
    testCompile('junit:junit')
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testCompile('org.junit.jupiter:junit-jupiter-engine')
    testCompile('org.junit.jupiter:junit-jupiter-params')
    testCompile('org.mockito:mockito-core')
    testCompile('org.mockito:mockito-junit-jupiter')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
    }
}

test {
    useJUnitPlatform()
}

task startDatastore {
    group 'Docker Helpers'
    description 'Start the cap datastore docker image'
    doFirst {
        exec {
            commandLine './bin/start-datastore-docker.sh'
        }
    }
}

task stopDatastore {
    group 'Docker Helpers'
    description 'Stop a running docker image'
    doFirst {
        exec {
            commandLine './bin/stop-datastore-docker.sh'
        }
    }
}

bootRun.dependsOn startDatastore
bootRun.mustRunAfter startDatastore
bootRun.finalizedBy stopDatastore

test.dependsOn startDatastore
test.mustRunAfter startDatastore
test.finalizedBy stopDatastore
